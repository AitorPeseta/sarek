/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/sarek -profile test,<extra_test_profile>,<docker/singularity> --outdir <OUTDIR>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {
    input                  = "${projectDir}/tests/csv/3.0/recalibrated_somatic.csv"
    chr_dir                = params.test_data['homo_sapiens']['genome']['genome_21_chromosomes_dir']
    dbsnp                  = params.test_data['homo_sapiens']['genome']['dbsnp_138_hg38_21_vcf_gz']
    fasta                  = params.test_data['homo_sapiens']['genome']['genome_21_fasta']
    germline_resource      = params.test_data['homo_sapiens']['genome']['gnomad_r2_1_1_21_vcf_gz']
    intervals              = params.test_data['homo_sapiens']['genome']['genome_21_multi_interval_bed']
    pon                    = params.test_data['homo_sapiens']['genome']['mills_and_1000g_indels_21_vcf_gz']
    nucleotides_per_second = 20
    step                   = 'variant_calling'
    tools                  = null
    wes                    = true
}

process {
    withName:'FREEC_SOMATIC'{
        ext.args = {
            [
                "sample":[
                    inputformat: "pileup",
                    mateorientation: "FR"
                ],
                "general":[
                    bedgraphoutput: "TRUE",
                    noisydata: "TRUE",
                    minexpectedgc: "0",
                    readcountthreshold: "1",
                    sex: meta.sex,
                    window: "10",
                    ],
                "control":[
                    inputformat: "pileup",
                    mateorientation: "FR"
                ]
            ]
        }
    }

    if (params.tools && params.tools.split(',').contains('mutect2')) {
        withName: 'NFCORE_SAREK:SAREK:PAIR_VARIANT_CALLING:GATK_TUMOR_NORMAL_SOMATIC_VARIANT_CALLING:MUTECT2'{
            //sample name from when the test data was generated
            ext.args = { "--f1r2-tar-gz ${task.ext.prefix}.f1r2.tar.gz --normal-sample normal " }
        }
    }

    withName: 'FILTERVARIANTTRANCHES'{
        ext.args = { "--info-key CNN_1D --indel-tranche 0" }
    }
}
